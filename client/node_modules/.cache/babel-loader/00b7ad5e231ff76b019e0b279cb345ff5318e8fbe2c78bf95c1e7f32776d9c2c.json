{"ast":null,"code":"var _jsxFileName = \"/oper/work/endian/tiktok_style_app/client/src/components/VideoFeed.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Spin } from 'antd';\nimport { useInView } from 'react-intersection-observer';\nimport styled from 'styled-components';\nimport VideoPlayer from './VideoPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedContainer = styled.div`\n  height: 100%;\n  overflow-y: scroll;\n  scroll-snap-type: y mandatory;\n`;\n_c = FeedContainer;\nconst VideoItem = styled.div`\n  height: 100%;\n  scroll-snap-align: start;\n  position: relative;\n`;\n_c2 = VideoItem;\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n_c3 = LoadingContainer;\nconst VideoFeed = ({\n  contents,\n  currentContent,\n  onContentChange,\n  loading\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const containerRef = useRef(null);\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  // 使用IntersectionObserver检测当前可见的视频\n  const handleVideoInView = index => {\n    if (index !== activeIndex) {\n      setActiveIndex(index);\n      onContentChange(contents[index]);\n    }\n  };\n\n  // 处理滚动事件，加载更多内容\n  const handleScroll = () => {\n    if (!containerRef.current) return;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = containerRef.current;\n    if (scrollTop + clientHeight >= scrollHeight - 20) {\n      // 可以在这里添加加载更多内容的逻辑\n    }\n  };\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      container.addEventListener('scroll', handleScroll);\n    }\n    return () => {\n      if (container) {\n        container.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, [contents]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(FeedContainer, {\n    ref: containerRef,\n    children: _s(contents.map(_s((content, index) => {\n      _s();\n      // 使用React Intersection Observer Hook\n      const [ref, inView] = useInView({\n        threshold: 0.7 // 当70%的元素可见时\n      });\n\n      // 当视频进入视图时通知父组件\n      useEffect(() => {\n        if (inView) {\n          handleVideoInView(index);\n        }\n      }, [inView, index]);\n      return /*#__PURE__*/_jsxDEV(VideoItem, {\n        ref: ref,\n        children: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          content: content,\n          isActive: activeIndex === index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, content.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this);\n    }, \"NM+FbdzloGTSb9OQYptCldRblZA=\", false, function () {\n      return [useInView];\n    })), \"NM+FbdzloGTSb9OQYptCldRblZA=\", false, function () {\n      return [useInView];\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s2(VideoFeed, \"Olzy7uIh2aExl4l7zuk5Rc6AXHk=\");\n_c4 = VideoFeed;\nexport default VideoFeed;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FeedContainer\");\n$RefreshReg$(_c2, \"VideoItem\");\n$RefreshReg$(_c3, \"LoadingContainer\");\n$RefreshReg$(_c4, \"VideoFeed\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Spin","useInView","styled","VideoPlayer","jsxDEV","_jsxDEV","FeedContainer","div","_c","VideoItem","_c2","LoadingContainer","_c3","VideoFeed","contents","currentContent","onContentChange","loading","_s2","_s","$RefreshSig$","containerRef","activeIndex","setActiveIndex","handleVideoInView","index","handleScroll","current","scrollTop","scrollHeight","clientHeight","container","addEventListener","removeEventListener","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","content","inView","threshold","isActive","id","_c4","$RefreshReg$"],"sources":["/oper/work/endian/tiktok_style_app/client/src/components/VideoFeed.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Spin } from 'antd';\nimport { useInView } from 'react-intersection-observer';\nimport styled from 'styled-components';\nimport VideoPlayer from './VideoPlayer';\n\nconst FeedContainer = styled.div`\n  height: 100%;\n  overflow-y: scroll;\n  scroll-snap-type: y mandatory;\n`;\n\nconst VideoItem = styled.div`\n  height: 100%;\n  scroll-snap-align: start;\n  position: relative;\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nconst VideoFeed = ({ contents, currentContent, onContentChange, loading }) => {\n    const containerRef = useRef(null);\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    // 使用IntersectionObserver检测当前可见的视频\n    const handleVideoInView = (index) => {\n        if (index !== activeIndex) {\n            setActiveIndex(index);\n            onContentChange(contents[index]);\n        }\n    };\n\n    // 处理滚动事件，加载更多内容\n    const handleScroll = () => {\n        if (!containerRef.current) return;\n\n        const { scrollTop, scrollHeight, clientHeight } = containerRef.current;\n        if (scrollTop + clientHeight >= scrollHeight - 20) {\n            // 可以在这里添加加载更多内容的逻辑\n        }\n    };\n\n    useEffect(() => {\n        const container = containerRef.current;\n        if (container) {\n            container.addEventListener('scroll', handleScroll);\n        }\n        return () => {\n            if (container) {\n                container.removeEventListener('scroll', handleScroll);\n            }\n        };\n    }, [contents]);\n\n    if (loading) {\n        return (\n            <LoadingContainer>\n                <Spin size=\"large\" />\n            </LoadingContainer>\n        );\n    }\n\n    return (\n        <FeedContainer ref={containerRef}>\n            {contents.map((content, index) => {\n                // 使用React Intersection Observer Hook\n                const [ref, inView] = useInView({\n                    threshold: 0.7, // 当70%的元素可见时\n                });\n\n                // 当视频进入视图时通知父组件\n                useEffect(() => {\n                    if (inView) {\n                        handleVideoInView(index);\n                    }\n                }, [inView, index]);\n\n                return (\n                    <VideoItem key={content.id} ref={ref}>\n                        <VideoPlayer\n                            content={content}\n                            isActive={activeIndex === index}\n                        />\n                    </VideoItem>\n                );\n            })}\n        </FeedContainer>\n    );\n};\n\nexport default VideoFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}